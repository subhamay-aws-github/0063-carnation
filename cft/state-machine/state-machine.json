{
  "Comment": "A state machine to demonstrate map state",
  "StartAt": "Generate Sample Data",
  "Version": "1.0",
  "TimeoutSeconds": 900,
  "States": {
    "Generate Sample Data": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "InputPath": "$",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${GenDataLambda}:$LATEST"
      },
      "OutputPath": "$.Payload",
      "Next": "Map"
    },
    "Map": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Process Data",
        "States": {
          "Process Data": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "Payload.$": "$",
              "FunctionName": "${PutDataLambda}:$LATEST"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 2,
                "MaxAttempts": 6,
                "BackoffRate": 2
              }
            ],
            "End": true
          }
        }
      },
      "Next": "Purge Queue",
      "OutputPath": "$.[*].event"
    },
    "Purge Queue": {
      "Type": "Task",
      "Next": "Any Error ?",
      "Parameters": {
        "QueueUrl": "${SQSQueueURL}"
      },
      "Resource": "arn:aws:states:::aws-sdk:sqs:purgeQueue",
      "ResultPath": null
    },
    "Any Error ?": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$",
              "IsPresent": true
            },
            {
              "Variable": "$[0]",
              "IsPresent": true
            }
          ],
          "Next": "SQS SendMessage"
        }
      ],
      "Default": "Success",
      "InputPath": "$",
      "OutputPath": "$"
    },
    "SQS SendMessage": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sqs:sendMessage",
      "Parameters": {
        "MessageBody.$": "$",
        "QueueUrl": "${SQSQueueURL}"
      },
      "Next": "Fail"
    },
    "Fail": {
      "Type": "Fail"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}